Terraform command options
-------------------------

# terraform init >> This option is used for initializing and installing all required librareis for provider mentioned in provider block in terraform code.

# terraform plan >> This option is used for display output of apply option without actually performing any action on resources.

# terraform apply >> This option is used to perform action either create or destroy and modify any resurce mentioned in terraform code.

# terraform apply/destroy target >> This option is for targetting specific resource for any action instead of all resources in terraform code.

# terraform state list >> This will list all terraform resources created

# terraform state show >> This will show details of any resources used with this command. If dont provide resource name then it will show all resources.

# terraform plan -out=<plan_file_name> >> Save terraform plan to use it later

# terraform apply "<plan_file_name> >> To use saved plan, if use saved plan it will not ask to for confirmation and will not show plan at the time of execution.

# terraform show "<plan_file_name>" >> To display saved plan before applying it.

Terraform Variables
--------------------

variable.tf >> Contain terraform variable's name, description and default value. Default value of any variable will be used if that is not mentioned in .tfvars file for that variable.

--------Format of variable.tf file-------

variable "cidr_range" {
  description = "The cidr range will used"
  type        = string
  default     = 10.0.1.0/24
}

variable "az_name" {
  description = "The Availability zone for resources"
  type        = string
  default     = ap-south-1a
}

terraform.tfvars >> This is default file which terraform looks for variables and its value. if variable or it's value is not mentioned in this then default value from variable.tf will be used If no value is mentioned in any of those 2 files then terraform will ask during terrform apply.

To use other than terraform.tfvars file for variables use -var-file option with apply or destroy command

# terraform apply -var-file variable-filename

--------Format of terraform.tfvars file-------

## See variables.tf for descriptions

cidr_range = "10.0.2.0/24"
az_name = ap-south-1a


How to use count.index to create multiple resources like subnet or instance etc.
---------------------------------------------------------------------------------

To create mulitple resource 

resource "aws_instance" "resource-name" {
  count = 3

  instance_type          = "t2.micro"
  ami                    = <ami-name>
  key_name               = "<key-name>"
  subnet_id              = aws_subnet.<subnet-name>.*.id[count.index]
  
tags = {
    Name = "infra-server-${count.index+1}"
    }
}

To use resource in other resource without using .id attribute
--------------------------------------------------------------

Below example show how to use subnet created using count option to create ALB

resource "aws_elb" "test-elb" {
  name            = "test-elb"
  subnets         = aws_subnet.elb-subnet.*.id
  security_groups = [aws_security_group.elb-sg.id]


Below example show how to use ec2 instance created using count option to register with ALB

  instances                   = aws_instance.elb-instance.*.id
  cross_zone_load_balancing   = true
  idle_timeout                = 400
  connection_draining         = true
  connection_draining_timeout = 400


